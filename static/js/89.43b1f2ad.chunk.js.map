{"version":3,"file":"static/js/89.43b1f2ad.chunk.js","mappings":"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","sources":["webpack://react-node-team-project/./src/components/AuthForm/index.module.css?c733","images/svg/eye.svg","images/svg/eye-blocked.svg","components/AuthForm/validator.js","components/AuthForm/FormUserDetails.js","webpack://react-node-team-project/./src/components/DropList/index.module.css?d5d3","components/DropList/index.jsx","components/AuthForm/FormPersonalDetails.js","components/AuthForm/index.jsx","webpack://react-node-team-project/./src/pages/RegisterPage/index.module.css?c16b","pages/RegisterPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AuthForm_form__egVAb\",\"title\":\"AuthForm_title__iLzAU\",\"fieldContainer\":\"AuthForm_fieldContainer__ExMkV\",\"input\":\"AuthForm_input__Hh+xa\",\"inputBox\":\"AuthForm_inputBox__2hnZq\",\"toggle\":\"AuthForm_toggle__TjwWD\",\"validation\":\"AuthForm_validation__bBPXC\",\"show\":\"AuthForm_show__T3lFZ\",\"items\":\"AuthForm_items__MbG-W\",\"valid\":\"AuthForm_valid__UHubo\",\"questionText\":\"AuthForm_questionText__VEDc+\",\"loginLink\":\"AuthForm_loginLink__5qwtc\",\"buttonContainer\":\"AuthForm_buttonContainer__ayWr7\",\"button\":\"AuthForm_button__BaHoU\",\"buttonDefault\":\"AuthForm_buttonDefault__ICNIS\",\"buttonActive\":\"AuthForm_buttonActive__7kiBc\",\"register\":\"AuthForm_register__vFGNy\",\"back\":\"AuthForm_back__3TCql\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEye(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#f59256\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"eye\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 6c-6.979 0-13.028 4.064-16 10 2.972 5.936 9.021 10 16 10s13.027-4.064 16-10c-2.972-5.936-9.021-10-16-10zM23.889 11.303c1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303s-5.527-0.796-7.889-2.303c-1.88-1.199-3.473-2.805-4.67-4.697 1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 4.418 3.582 8 8 8s8-3.582 8-8c0-0.962-0.17-1.883-0.482-2.737 0.124 0.074 0.248 0.15 0.371 0.228v0zM16 13c0 1.657-1.343 3-3 3s-3-1.343-3-3 1.343-3 3-3 3 1.343 3 3z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.b02640ef93ed7c75e7f53dc6c21987e7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEyeBlocked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#f59256\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"eye-blocked\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.561 0.439c-0.586-0.586-1.535-0.586-2.121 0l-6.318 6.318c-1.623-0.492-3.342-0.757-5.122-0.757-6.979 0-13.028 4.064-16 10 1.285 2.566 3.145 4.782 5.407 6.472l-4.968 4.968c-0.586 0.586-0.586 1.535 0 2.121 0.293 0.293 0.677 0.439 1.061 0.439s0.768-0.146 1.061-0.439l27-27c0.586-0.586 0.586-1.536 0-2.121zM13 10c1.32 0 2.44 0.853 2.841 2.037l-3.804 3.804c-1.184-0.401-2.037-1.521-2.037-2.841 0-1.657 1.343-3 3-3zM3.441 16c1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 1.715 0.54 3.304 1.459 4.607l-1.904 1.904c-1.639-1.151-3.038-2.621-4.114-4.323z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 13.813c0-0.849-0.133-1.667-0.378-2.434l-10.056 10.056c0.768 0.245 1.586 0.378 2.435 0.378 4.418 0 8-3.582 8-8z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.938 9.062l-2.168 2.168c0.040 0.025 0.079 0.049 0.118 0.074 1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303-1.208 0-2.403-0.149-3.561-0.439l-2.403 2.403c1.866 0.671 3.873 1.036 5.964 1.036 6.978 0 13.027-4.064 16-10-1.407-2.81-3.504-5.2-6.062-6.938z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeBlocked);\nexport default __webpack_public_path__ + \"static/media/eye-blocked.3fe4f5a167e9ea01c4f0d44a65fd1227.svg\";\nexport { ForwardRef as ReactComponent };","import './ErrorMessage.css';\n\nexport const ErrorMessageWrapper = msg => {\n  return <div className=\"validation-error-message\">{msg}</div>;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport s from './index.module.css';\nimport eye from '../../images/svg/eye.svg';\nimport eyeBlock from '../../images/svg/eye-blocked.svg';\nimport { ErrorMessageWrapper } from './validator';\n\nconst validationSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{7,})/,\n      'Password is not valid as per password policy'\n    )\n    .max(32),\n  confirmPassword: yup.string().when('password', {\n    is: val => (val && val.length > 0 ? true : false),\n    then: yup\n      .string()\n      .oneOf([yup.ref('password')], 'Both password need to be the same'),\n  }),\n});\n\nexport const FormUserDetails = ({ formData, setFormData, nextStep }) => {\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n  const [spanBgImage, setSpanBgImage] = useState(eye);\n  const [spanConfirmBgImage, setSpanConfirmBgImage] = useState(eye);\n  const [toggleShowValidation, setToggleShowValidation] = useState(\n    s.validation\n  );\n\n  let passwordInput = document.getElementById('password');\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    passwordInput = document.getElementById('password');\n  }, []);\n  const lowerCase = useRef();\n  const upperCase = useRef();\n  const digit = useRef();\n  const specialChar = useRef();\n  const minLength = useRef();\n\n  function handleToggleBtn(event) {\n    if (event.currentTarget.id === 'passwordEye') {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setSpanBgImage(eye);\n      } else {\n        setPasswordType('text');\n        setSpanBgImage(eyeBlock);\n      }\n    } else {\n      if (confirmPasswordType === 'text') {\n        setConfirmPasswordType('password');\n        setSpanConfirmBgImage(eye);\n      } else {\n        setConfirmPasswordType('text');\n        setSpanConfirmBgImage(eyeBlock);\n      }\n    }\n  }\n\n  function checkPassword(data) {\n    const lower = new RegExp('(?=.*[a-z])');\n    const upper = new RegExp('(?=.*[A-Z])');\n    const number = new RegExp('(?=.*[0-9])');\n    const special = new RegExp('(?=.*[!@#$%^&*])');\n    const length = new RegExp('(?=.{7,})');\n\n    lower.test(data)\n      ? lowerCase.current.classList.add(s.valid)\n      : lowerCase.current.classList.remove(s.valid);\n\n    upper.test(data)\n      ? upperCase.current.classList.add(s.valid)\n      : upperCase.current.classList.remove(s.valid);\n\n    number.test(data)\n      ? digit.current.classList.add(s.valid)\n      : digit.current.classList.remove(s.valid);\n\n    special.test(data)\n      ? specialChar.current.classList.add(s.valid)\n      : specialChar.current.classList.remove(s.valid);\n\n    length.test(data)\n      ? minLength.current.classList.add(s.valid)\n      : minLength.current.classList.remove(s.valid);\n    if (\n      lower.test(data) &&\n      upper.test(data) &&\n      number.test(data) &&\n      special.test(data) &&\n      length.test(data)\n    ) {\n      setToggleShowValidation(s.validation);\n    } else {\n      setToggleShowValidation(s.validation + ' ' + s.show);\n    }\n  }\n  return (\n    <>\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          setFormData(values);\n          nextStep();\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ errors, touched }) => (\n          <Form className={s.form}>\n            <h1 className={s.title}>Registration</h1>\n            <div className={s.fieldContainer}>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                className={s.input}\n                error={touched.email && errors.email}\n              />\n              <ErrorMessage name=\"email\">{ErrorMessageWrapper}</ErrorMessage>\n            </div>\n            <div className={s.fieldContainer}>\n              <label className={s.inputBox} htmlFor=\"password\">\n                <Field\n                  type={passwordType}\n                  autoComplete=\"on\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className={s.input}\n                  error={touched.firstName && errors.firstName}\n                  onKeyUp={() => checkPassword(passwordInput.value)}\n                  onFocus={() => checkPassword(passwordInput.value)}\n                  onBlur={() => setToggleShowValidation(s.validation)}\n                />\n                <span\n                  className={s.toggle}\n                  id=\"passwordEye\"\n                  onClick={event => handleToggleBtn(event)}\n                  style={{ backgroundImage: `url(${spanBgImage})` }}\n                ></span>\n\n                <div className={toggleShowValidation} id=\"validation\">\n                  <ul className={s.items}>\n                    <li ref={lowerCase}>At least one lowercase character</li>\n                    <li ref={upperCase}>At least one uppercase character</li>\n                    <li ref={digit}>At least one number</li>\n                    <li ref={specialChar}>At least one special character</li>\n                    <li ref={minLength}>At least 7 characters</li>\n                  </ul>\n                </div>\n              </label>\n              <ErrorMessage name=\"password\">{ErrorMessageWrapper}</ErrorMessage>\n            </div>\n            <div className={s.fieldContainer}>\n              <Field\n                type={confirmPasswordType}\n                autoComplete=\"on\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm Password\"\n                className={s.input}\n                error={touched.lastName && errors.lastName}\n              />\n              <span\n                className={s.toggle}\n                id=\"confirmPasswordEye\"\n                onClick={event => handleToggleBtn(event)}\n                style={{ backgroundImage: `url(${spanConfirmBgImage})` }}\n              ></span>\n              <ErrorMessage name=\"confirmPassword\">\n                {ErrorMessageWrapper}\n              </ErrorMessage>\n            </div>\n            <div className={s.buttonContainer}>\n              <button type=\"submit\" className={`${s.button} ${s.buttonActive}`}>\n                Next\n              </button>\n            </div>\n            <p className={s.questionText}>\n              Already have an account?{' '}\n              <Link to=\"/login\" className={s.loginLink}>\n                Login\n              </Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFormUserDetails.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"DropList\":\"DropList_DropList__rRKqA\",\"DropItem\":\"DropList_DropItem__iUAth\"};","import s from './index.module.css';\n\nexport default function DropList({ list, onSelect }) {\n  return (\n    <>\n      {list.length > 0 && (\n        <ul className={s.DropList}>\n          {list.map(item => (\n            <li\n              key={`${item.city}, ${item.region}`}\n              className={s.DropItem}\n              onClick={() => onSelect(`${item.city}, ${item.region}`)}\n            >\n              {item.city}, {item.region}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport s from './index.module.css';\nimport { ErrorMessageWrapper } from './validator';\nimport DropList from 'components/DropList';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/,\n      'Name should only contain letters'\n    ),\n  city: yup\n    .string()\n    .matches(\n      /^[\\w\\-’ ]+, [\\w\\-’ ]+$/,\n      'Address should be in format: City, Region'\n    ),\n  phone: yup\n    .string()\n    .matches(/^\\+[0-9]{12}$/, 'Phone should be in format +380671234567'),\n});\n\nexport const FormPersonalDetails = ({\n  formData,\n  setFormData,\n  nextStep,\n  prevStep,\n}) => {\n  const [showDropList, setShowDropList] = useState(false);\n  const [direction, setDirection] = useState('back');\n  const dispatch = useDispatch();\n  let listCities = useSelector(authSelectors.getCities);\n\n  const changeInputCity = e => {\n    if (e.target.value !== ' ') {\n      setFormData(pre => ({ ...pre, city: e.target.value }));\n      if (e.target.value.length >= 3) {\n        dispatch(authOperations.searchCity(e.target.value));\n        setShowDropList(true);\n      } else {\n        setShowDropList(false);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          setFormData({ ...values, city: formData.city });\n          direction === 'back' ? prevStep() : nextStep();\n          const registerValues = { ...values, city: formData.city };\n          delete registerValues.confirmPassword;\n          if (direction === 'forward') {\n            dispatch(authOperations.register(registerValues));\n          }\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form className={s.form}>\n          <h1 className={s.title}>Registration</h1>\n          <div className={s.fieldContainer}>\n            <Field name=\"name\" placeholder=\"Name\" className={s.input} />\n            <ErrorMessage name=\"name\">{ErrorMessageWrapper}</ErrorMessage>\n          </div>\n          <div className={s.fieldContainer}>\n            <label className={s.inputBox} htmlFor=\"city\">\n              <Field\n                name=\"city\"\n                id=\"city\"\n                placeholder=\"City, region\"\n                className={s.input}\n                margin=\"normal\"\n                autoComplete=\"of\"\n                value={formData.city}\n                onChange={changeInputCity}\n              />\n              {showDropList && (\n                <DropList\n                  list={listCities}\n                  onSelect={str => {\n                    setFormData(pre => ({ ...pre, city: str }));\n                    setShowDropList(false);\n                  }}\n                />\n              )}\n            </label>\n            <ErrorMessage name=\"city\">{ErrorMessageWrapper}</ErrorMessage>\n          </div>\n          <div className={s.fieldContainer}>\n            <Field\n              name=\"phone\"\n              placeholder=\"Mobile phone\"\n              className={s.input}\n            />\n            <ErrorMessage name=\"phone\">{ErrorMessageWrapper}</ErrorMessage>\n          </div>\n          <div className={s.buttonContainer}>\n            <button\n              type=\"submit\"\n              className={`${s.button} ${s.buttonActive} ${s.register}`}\n              onClick={() => setDirection('forward')}\n            >\n              Register\n            </button>\n            <button\n              type=\"submit\"\n              className={`${s.button} ${s.buttonDefault} ${s.back}`}\n              onClick={() => setDirection('back')}\n            >\n              Back\n            </button>\n          </div>\n          <p className={s.questionText}>\n            Already have an account?{' '}\n            <Link to=\"/login\" className={s.loginLink}>\n              Login\n            </Link>\n          </p>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nFormPersonalDetails.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired,\n  prevStep: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { FormUserDetails } from './FormUserDetails';\nimport { FormPersonalDetails } from './FormPersonalDetails';\n\nexport default function AuthForm() {\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    city: '',\n    phone: '',\n  });\n  const nextStep = () => setStep(prev => (prev === 1 ? prev + 1 : 2));\n  const prevStep = () => setStep(prev => prev - 1);\n  switch (step) {\n    case 1:\n      return (\n        <FormUserDetails\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n        />\n      );\n    case 2:\n      return (\n        <FormPersonalDetails\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n          prevStep={prevStep}\n        />\n      );\n    default:\n      return;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"waveBackground\":\"RegisterPage_waveBackground__UECut\"};","import React, { useEffect } from 'react';\nimport AuthForm from 'components/AuthForm';\nimport Container from 'components/Container';\nimport s from './index.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\n\nexport default function RegisterPage() {\n  const navigate = useNavigate();\n  let isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/user');\n    }\n  }, [navigate, isLoggedIn]);\n  return (\n    <div className={s.waveBackground}>\n      <Container>\n        <AuthForm />\n      </Container>\n    </div>\n  );\n}\n"],"names":["ErrorMessageWrapper","msg","className","validationSchema","yup","email","required","password","matches","max","confirmPassword","when","is","val","length","then","oneOf","FormUserDetails","formData","setFormData","nextStep","useState","passwordType","setPasswordType","confirmPasswordType","setConfirmPasswordType","eye","spanBgImage","setSpanBgImage","spanConfirmBgImage","setSpanConfirmBgImage","s","toggleShowValidation","setToggleShowValidation","passwordInput","document","getElementById","useEffect","lowerCase","useRef","upperCase","digit","specialChar","minLength","handleToggleBtn","event","currentTarget","id","eyeBlock","checkPassword","data","lower","RegExp","upper","number","special","test","current","classList","add","remove","initialValues","onSubmit","values","errors","touched","type","name","placeholder","error","htmlFor","autoComplete","firstName","onKeyUp","value","onFocus","onBlur","onClick","style","backgroundImage","ref","lastName","to","DropList","list","onSelect","map","item","city","region","phone","FormPersonalDetails","prevStep","showDropList","setShowDropList","direction","setDirection","dispatch","useDispatch","listCities","useSelector","authSelectors","registerValues","authOperations","margin","onChange","e","target","pre","str","AuthForm","step","setStep","prev","RegisterPage","navigate","useNavigate","isLoggedIn","Container"],"sourceRoot":""}