{"version":3,"file":"static/js/89.06834db2.chunk.js","mappings":"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","sources":["webpack://react-node-team-project/./src/components/AuthForm/index.module.css?c733","images/svg/eye.svg","images/svg/eye-blocked.svg","components/AuthForm/validator.js","components/AuthForm/FormUserDetails.js","webpack://react-node-team-project/./src/components/DropList/index.module.css?d5d3","components/DropList/index.jsx","components/AuthForm/FormPersonalDetails.js","components/AuthForm/index.jsx","webpack://react-node-team-project/./src/pages/RegisterPage/index.module.css?c16b","pages/RegisterPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AuthForm_form__egVAb\",\"title\":\"AuthForm_title__iLzAU\",\"fieldContainer\":\"AuthForm_fieldContainer__ExMkV\",\"input\":\"AuthForm_input__Hh+xa\",\"inputBox\":\"AuthForm_inputBox__2hnZq\",\"toggle\":\"AuthForm_toggle__TjwWD\",\"validation\":\"AuthForm_validation__bBPXC\",\"show\":\"AuthForm_show__T3lFZ\",\"items\":\"AuthForm_items__MbG-W\",\"valid\":\"AuthForm_valid__UHubo\",\"questionText\":\"AuthForm_questionText__VEDc+\",\"loginLink\":\"AuthForm_loginLink__5qwtc\",\"buttonContainer\":\"AuthForm_buttonContainer__ayWr7\",\"button\":\"AuthForm_button__BaHoU\",\"buttonDefault\":\"AuthForm_buttonDefault__ICNIS\",\"buttonActive\":\"AuthForm_buttonActive__7kiBc\",\"register\":\"AuthForm_register__vFGNy\",\"back\":\"AuthForm_back__3TCql\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEye(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#f59256\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"eye\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 6c-6.979 0-13.028 4.064-16 10 2.972 5.936 9.021 10 16 10s13.027-4.064 16-10c-2.972-5.936-9.021-10-16-10zM23.889 11.303c1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303s-5.527-0.796-7.889-2.303c-1.88-1.199-3.473-2.805-4.67-4.697 1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 4.418 3.582 8 8 8s8-3.582 8-8c0-0.962-0.17-1.883-0.482-2.737 0.124 0.074 0.248 0.15 0.371 0.228v0zM16 13c0 1.657-1.343 3-3 3s-3-1.343-3-3 1.343-3 3-3 3 1.343 3 3z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.b02640ef93ed7c75e7f53dc6c21987e7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEyeBlocked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#f59256\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"eye-blocked\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.561 0.439c-0.586-0.586-1.535-0.586-2.121 0l-6.318 6.318c-1.623-0.492-3.342-0.757-5.122-0.757-6.979 0-13.028 4.064-16 10 1.285 2.566 3.145 4.782 5.407 6.472l-4.968 4.968c-0.586 0.586-0.586 1.535 0 2.121 0.293 0.293 0.677 0.439 1.061 0.439s0.768-0.146 1.061-0.439l27-27c0.586-0.586 0.586-1.536 0-2.121zM13 10c1.32 0 2.44 0.853 2.841 2.037l-3.804 3.804c-1.184-0.401-2.037-1.521-2.037-2.841 0-1.657 1.343-3 3-3zM3.441 16c1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 1.715 0.54 3.304 1.459 4.607l-1.904 1.904c-1.639-1.151-3.038-2.621-4.114-4.323z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 13.813c0-0.849-0.133-1.667-0.378-2.434l-10.056 10.056c0.768 0.245 1.586 0.378 2.435 0.378 4.418 0 8-3.582 8-8z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.938 9.062l-2.168 2.168c0.040 0.025 0.079 0.049 0.118 0.074 1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303-1.208 0-2.403-0.149-3.561-0.439l-2.403 2.403c1.866 0.671 3.873 1.036 5.964 1.036 6.978 0 13.027-4.064 16-10-1.407-2.81-3.504-5.2-6.062-6.938z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeBlocked);\nexport default __webpack_public_path__ + \"static/media/eye-blocked.3fe4f5a167e9ea01c4f0d44a65fd1227.svg\";\nexport { ForwardRef as ReactComponent };","import './ErrorMessage.css';\n\nexport const ErrorMessageWrapper = msg => {\n  return <div className=\"validation-error-message\">{msg}</div>;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport s from './index.module.css';\nimport eye from '../../images/svg/eye.svg';\nimport eyeBlock from '../../images/svg/eye-blocked.svg';\nimport { ErrorMessageWrapper } from './validator';\n\nconst validationSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{7,})/,\n      'Password is not valid as per password policy'\n    )\n    .max(32),\n  confirmPassword: yup\n    .string()\n    .required('Confirm Password is required')\n    .when('password', {\n      is: val => (val && val.length > 0 ? true : false),\n      then: yup\n        .string()\n        .oneOf([yup.ref('password')], 'Both password need to be the same'),\n    }),\n});\n\nexport const FormUserDetails = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n  const [spanBgImage, setSpanBgImage] = useState(eye);\n  const [spanConfirmBgImage, setSpanConfirmBgImage] = useState(eye);\n  const [toggleShowValidation, setToggleShowValidation] = useState(\n    s.validation\n  );\n\n  let passwordInput = document.getElementById('password');\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    passwordInput = document.getElementById('password');\n  }, []);\n  const lowerCase = useRef();\n  const upperCase = useRef();\n  const digit = useRef();\n  const specialChar = useRef();\n  const minLength = useRef();\n\n  function handleToggleBtn(event) {\n    if (event.currentTarget.id === 'passwordEye') {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setSpanBgImage(eye);\n      } else {\n        setPasswordType('text');\n        setSpanBgImage(eyeBlock);\n      }\n    } else {\n      if (confirmPasswordType === 'text') {\n        setConfirmPasswordType('password');\n        setSpanConfirmBgImage(eye);\n      } else {\n        setConfirmPasswordType('text');\n        setSpanConfirmBgImage(eyeBlock);\n      }\n    }\n  }\n\n  function checkPassword(data) {\n    const lower = new RegExp('(?=.*[a-z])');\n    const upper = new RegExp('(?=.*[A-Z])');\n    const number = new RegExp('(?=.*[0-9])');\n    const special = new RegExp('(?=.*[!@#$%^&*])');\n    const length = new RegExp('(?=.{7,})');\n\n    lower.test(data)\n      ? lowerCase.current.classList.add(s.valid)\n      : lowerCase.current.classList.remove(s.valid);\n\n    upper.test(data)\n      ? upperCase.current.classList.add(s.valid)\n      : upperCase.current.classList.remove(s.valid);\n\n    number.test(data)\n      ? digit.current.classList.add(s.valid)\n      : digit.current.classList.remove(s.valid);\n\n    special.test(data)\n      ? specialChar.current.classList.add(s.valid)\n      : specialChar.current.classList.remove(s.valid);\n\n    length.test(data)\n      ? minLength.current.classList.add(s.valid)\n      : minLength.current.classList.remove(s.valid);\n    if (\n      lower.test(data) &&\n      upper.test(data) &&\n      number.test(data) &&\n      special.test(data) &&\n      length.test(data)\n    ) {\n      setToggleShowValidation(s.validation);\n    } else {\n      setToggleShowValidation(s.validation + ' ' + s.show);\n    }\n  }\n  return (\n    <>\n      <Formik\n        initialValues={props.data}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ errors, touched }) => (\n          <Form className={s.form}>\n            <h1 className={s.title}>Registration</h1>\n            <div className={s.fieldContainer}>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                className={s.input}\n                error={touched.email && errors.email}\n              />\n              <ErrorMessage name=\"email\">{ErrorMessageWrapper}</ErrorMessage>\n            </div>\n            <div className={s.fieldContainer}>\n              <label className={s.inputBox} htmlFor=\"password\">\n                <Field\n                  type={passwordType}\n                  autoComplete=\"on\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className={s.input}\n                  error={touched.firstName && errors.firstName}\n                  onKeyUp={() => checkPassword(passwordInput.value)}\n                  onFocus={() => checkPassword(passwordInput.value)}\n                  onBlur={() => setToggleShowValidation(s.validation)}\n                />\n                <span\n                  className={s.toggle}\n                  id=\"passwordEye\"\n                  onClick={event => handleToggleBtn(event)}\n                  style={{ backgroundImage: `url(${spanBgImage})` }}\n                ></span>\n\n                <div className={toggleShowValidation} id=\"validation\">\n                  <ul className={s.items}>\n                    <li ref={lowerCase}>At least one lowercase character</li>\n                    <li ref={upperCase}>At least one uppercase character</li>\n                    <li ref={digit}>At least one number</li>\n                    <li ref={specialChar}>At least one special character</li>\n                    <li ref={minLength}>At least 7 characters</li>\n                  </ul>\n                </div>\n              </label>\n              <ErrorMessage name=\"password\">{ErrorMessageWrapper}</ErrorMessage>\n            </div>\n            <div className={s.fieldContainer}>\n              <Field\n                type={confirmPasswordType}\n                autoComplete=\"on\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm Password\"\n                className={s.input}\n                error={touched.lastName && errors.lastName}\n              />\n              <span\n                className={s.toggle}\n                id=\"confirmPasswordEye\"\n                onClick={event => handleToggleBtn(event)}\n                style={{ backgroundImage: `url(${spanConfirmBgImage})` }}\n              ></span>\n              <ErrorMessage name=\"confirmPassword\">\n                {ErrorMessageWrapper}\n              </ErrorMessage>\n            </div>\n            <div className={s.buttonContainer}>\n              <button type=\"submit\" className={`${s.button} ${s.buttonActive}`}>\n                Next\n              </button>\n            </div>\n            <p className={s.questionText}>\n              Already have an account?{' '}\n              <Link to=\"/login\" className={s.loginLink}>\n                Login\n              </Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFormUserDetails.propTypes = {\n  data: PropTypes.object.isRequired,\n  next: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"DropList\":\"DropList_DropList__rRKqA\",\"DropItem\":\"DropList_DropItem__iUAth\"};","import s from './index.module.css';\n\nexport default function DropList({ list, onSelect }) {\n  return (\n    <>\n      {list.length > 0 && (\n        <ul className={s.DropList}>\n          {list.map(item => (\n            <li\n              key={`${item.city}, ${item.region}`}\n              className={s.DropItem}\n              onClick={() => onSelect(`${item.city}, ${item.region}`)}\n            >\n              {item.city}, {item.region}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport s from './index.module.css';\nimport { ErrorMessageWrapper } from './validator';\nimport DropList from 'components/DropList';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .matches(\n      /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/,\n      'Name should only contain Latin letters'\n    ),\n  city: yup\n    .string()\n    .matches(\n      /^[\\w\\-’ ]+, [\\w\\-’ ]+$/,\n      'Address should be in format: City, Region'\n    ),\n  phone: yup\n    .string()\n    .required('Phone is required')\n    .matches(/^\\+[0-9]{12}$/, 'Phone should be in format +380671234567'),\n});\n\nexport const FormPersonalDetails = ({ data, setFormData, next, prev }) => {\n  const handleSubmit = values => {\n    const registerValues = { ...values, city: data.city };\n    delete registerValues.confirmPassword;\n    next(registerValues, true);\n  };\n  const [showDropList, setShowDropList] = useState(false);\n  const dispatch = useDispatch();\n  let listCities = useSelector(authSelectors.getCities);\n\n  const changeInputCity = e => {\n    if (e.target.value !== ' ') {\n      setFormData(pre => ({ ...pre, city: e.target.value }));\n      if (e.target.value.length >= 3) {\n        dispatch(authOperations.searchCity(e.target.value));\n        setShowDropList(true);\n      } else {\n        setShowDropList(false);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={data}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ values }) => (\n          <Form className={s.form}>\n            <h1 className={s.title}>Registration</h1>\n            <div className={s.fieldContainer}>\n              <Field name=\"name\" placeholder=\"Name\" className={s.input} />\n              <ErrorMessage name=\"name\">{ErrorMessageWrapper}</ErrorMessage>\n            </div>\n            <div className={s.fieldContainer}>\n              <label className={s.inputBox} htmlFor=\"city\">\n                <Field\n                  name=\"city\"\n                  id=\"city\"\n                  placeholder=\"City, region\"\n                  className={s.input}\n                  margin=\"normal\"\n                  autoComplete=\"of\"\n                  value={data.city}\n                  onChange={changeInputCity}\n                />\n                {showDropList && (\n                  <DropList\n                    list={listCities}\n                    onSelect={str => {\n                      setFormData(pre => ({ ...pre, city: str }));\n                      setShowDropList(false);\n                    }}\n                  />\n                )}\n              </label>\n              <ErrorMessage name=\"city\">{ErrorMessageWrapper}</ErrorMessage>\n            </div>\n            <div className={s.fieldContainer}>\n              <Field\n                name=\"phone\"\n                placeholder=\"Mobile phone\"\n                className={s.input}\n              />\n              <ErrorMessage name=\"phone\">{ErrorMessageWrapper}</ErrorMessage>\n            </div>\n            <div className={s.buttonContainer}>\n              <button\n                type=\"submit\"\n                className={`${s.button} ${s.buttonActive} ${s.register}`}\n              >\n                Register\n              </button>\n              <button\n                type=\"button\"\n                className={`${s.button} ${s.buttonDefault} ${s.back}`}\n                onClick={() => {\n                  values.city = data.city;\n                  return prev(values);\n                }}\n              >\n                Back\n              </button>\n            </div>\n            <p className={s.questionText}>\n              Already have an account?{' '}\n              <Link to=\"/login\" className={s.loginLink}>\n                Login\n              </Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFormPersonalDetails.propTypes = {\n  data: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  prev: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { authOperations } from '../../redux/auth';\nimport { useDispatch } from 'react-redux';\nimport { FormUserDetails } from './FormUserDetails';\nimport { FormPersonalDetails } from './FormPersonalDetails';\n\nexport default function AuthForm() {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    city: '',\n    phone: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const dispatch = useDispatch();\n  const handleNextStep = (newData, final = false) => {\n    setFormData(prev => ({ ...prev, ...newData }));\n    if (final) {\n      dispatch(authOperations.register(newData));\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setFormData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <FormUserDetails next={handleNextStep} data={formData} />,\n    <FormPersonalDetails\n      next={handleNextStep}\n      prev={handlePrevStep}\n      setFormData={setFormData}\n      data={formData}\n    />,\n  ];\n  return <div>{steps[currentStep]}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"waveBackground\":\"RegisterPage_waveBackground__UECut\"};","import React, { useEffect } from 'react';\nimport AuthForm from 'components/AuthForm';\nimport Container from 'components/Container';\nimport s from './index.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\n\nexport default function RegisterPage() {\n  const navigate = useNavigate();\n  let isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/user');\n    }\n  }, [navigate, isLoggedIn]);\n  return (\n    <div className={s.waveBackground}>\n      <Container>\n        <AuthForm />\n      </Container>\n    </div>\n  );\n}\n"],"names":["ErrorMessageWrapper","msg","className","validationSchema","yup","email","required","password","matches","max","confirmPassword","when","is","val","length","then","oneOf","FormUserDetails","props","useState","passwordType","setPasswordType","confirmPasswordType","setConfirmPasswordType","eye","spanBgImage","setSpanBgImage","spanConfirmBgImage","setSpanConfirmBgImage","s","toggleShowValidation","setToggleShowValidation","passwordInput","document","getElementById","useEffect","lowerCase","useRef","upperCase","digit","specialChar","minLength","handleToggleBtn","event","currentTarget","id","eyeBlock","checkPassword","data","lower","RegExp","upper","number","special","test","current","classList","add","remove","initialValues","onSubmit","values","next","errors","touched","type","name","placeholder","error","htmlFor","autoComplete","firstName","onKeyUp","value","onFocus","onBlur","onClick","style","backgroundImage","ref","lastName","to","DropList","list","onSelect","map","item","city","region","phone","FormPersonalDetails","setFormData","prev","showDropList","setShowDropList","dispatch","useDispatch","listCities","useSelector","authSelectors","changeInputCity","e","target","pre","authOperations","registerValues","margin","onChange","str","AuthForm","formData","currentStep","setCurrentStep","handleNextStep","newData","final","steps","RegisterPage","navigate","useNavigate","isLoggedIn","Container"],"sourceRoot":""}