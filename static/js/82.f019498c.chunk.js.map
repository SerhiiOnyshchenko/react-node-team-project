{"version":3,"file":"static/js/82.f019498c.chunk.js","mappings":"iMACA,EAA4B,kCAA5B,EAAgF,wC,mBCAhF,EAA0B,4BAA1B,EAAkE,8BAAlE,EAAuG,yBAAvG,EAAuI,yBAAvI,EAA6K,+BAA7K,EAA8N,oCAA9N,EAA0Q,0BAA1Q,EAA2S,yBAA3S,EAA6U,2B,SC4E7U,EA1EkB,SAAAA,GAChB,OAA8BC,EAAAA,EAAAA,UAAS,QAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAqDJ,EAArDI,OAAQC,EAA6CL,EAA7CK,KAAMC,EAAuCN,EAAvCM,OAAQC,EAA+BP,EAA/BO,MAAOC,EAAwBR,EAAxBQ,MAAOC,EAAiBT,EAAjBS,OAAQC,EAASV,EAATU,KAC9CC,EAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5CC,EAAWP,EACdQ,QAAO,SAAAC,GAAE,OAAkB,IAAdA,EAAGC,MAAP,IACTC,KAAI,SAACF,EAAIG,GAAL,OAAeH,EAAGC,SAAH,QAAeG,IAAKP,EAAKM,IAAWH,EAAnD,IAEP,OACE,gBAAKK,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,wBAAKhB,KACL,iBAAKe,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAQC,IAAI,GAAGC,IAAKb,OAGtC,iBAAKU,UAAWC,EAAhB,WACE,mCACA,cACEG,QAAS,WACHlB,EAAK,KACPF,EAAW,QACXqB,YAAW,WACTrB,EAAW,OACZ,GAAE,KAEN,EACDsB,GAAIL,EATN,SAWGf,EAAK,IACJ,gCACGM,EAAK,GADR,IACaC,EAAS,GAAGc,KADzB,IACgCd,EAAS,GAAGe,OAG5C,uDAGJ,iBACEC,aAAc,WACZzB,EAAW,OACZ,EACD0B,MAAO,CAAE3B,QAASA,GAClBiB,UAAWC,EALb,WAOE,yBACGR,EAASI,KAAI,SAACc,EAAKb,GAAN,OACZ,uBAAgBN,EAAKM,IAAbA,EADI,OAIhB,yBACGL,EAASI,KAAI,SAACF,EAAIG,GAAL,OACZ,yBACGH,EAAGY,KADN,IACaZ,EAAGa,KADRV,EADI,UAQlB,qCACA,cAAGc,KAAMrB,EAAMsB,OAAO,SAASP,GAAIL,EAAaa,IAAI,aAApD,SACG3B,KAEH,oCACA,uBAAIC,KACJ,oCACA,uBAAIC,cAMf,E,oBC3EY0B,EAAa,SAAAC,GAAK,OAAIA,EAAMC,QAAQA,OAAlB,ECMhB,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,GAKhC,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAASM,EAAAA,eACV,GAAE,CAACN,KAGF,iCACE,wCACCE,IACC,+BACE,gBAAKrB,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,UACGoB,EAAY,IACXA,EAAYxB,KAAI,SAAAF,GAAE,OAChB,SAAC,EAAD,CAEEJ,KAAMI,EAAG+B,WACTzC,OAAQU,EAAGgC,MACXzC,KAAMS,EAAGiC,SAAWjC,EAAGiC,SAAW,GAClCzC,OAAQQ,EAAGkC,QAAUlC,EAAGkC,QAAU,qBAClCzC,MAAOO,EAAGP,MAAQO,EAAGP,MAAQ,qBAC7BC,MAAOM,EAAGN,MAAQM,EAAGN,MAAQ,qBAC7BC,OAAQK,EAAGmC,SAAWnC,EAAGmC,SAAW,sBAP/BnC,EAAGoC,IAFM,IAFtB,aAqBX,C","sources":["webpack://react-node-team-project/./src/pages/OurFriendsPage/index.module.css?67bf","webpack://react-node-team-project/./src/components/ItemFriend/index.module.css?c731","components/ItemFriend/index.jsx","redux/friends/friends-selectors.js","pages/OurFriendsPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OurFriendsPage_container__Hmjwy\",\"align_container\":\"OurFriendsPage_align_container__fPQ7x\"};","// extracted by mini-css-extract-plugin\nexport default {\"padding\":\"ItemFriend_padding__42dK2\",\"container\":\"ItemFriend_container__k0dCD\",\"flex\":\"ItemFriend_flex__no4e5\",\"logo\":\"ItemFriend_logo__cGUir\",\"friendData\":\"ItemFriend_friendData__eSKLo\",\"image_container\":\"ItemFriend_image_container__8+Ce1\",\"popup\":\"ItemFriend_popup__FJiyc\",\"time\":\"ItemFriend_time__Ae+QY\",\"adress\":\"ItemFriend_adress__rlFzL\"};","import { useState } from 'react';\nimport s from './index.module.css';\n\nconst ItemFrien = props => {\n  const [display, setDisplay] = useState('none');\n  const { header, time, adress, email, phone, avatar, site } = props;\n  const days = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  const newArray = time\n    .filter(el => el.isOpen !== false)\n    .map((el, index) => el.isOpen && { day: days[index], ...el });\n\n  return (\n    <div className={s.padding}>\n      <div className={s.container}>\n        <h3>{header}</h3>\n        <div className={s.flex}>\n          <div className={s.image_container}>\n            <img className={s.logo} alt=\"\" src={avatar} />\n          </div>\n\n          <div className={s.friendData}>\n            <h6>Time:</h6>\n            <p\n              onClick={() => {\n                if (time[0]) {\n                  setDisplay('flex');\n                  setTimeout(() => {\n                    setDisplay('none');\n                  }, 2000);\n                }\n              }}\n              id={s['time']}\n            >\n              {time[0] ? (\n                <>\n                  {days[0]} {newArray[0].from} {newArray[0].to}\n                </>\n              ) : (\n                <>-----------------</>\n              )}\n            </p>\n            <div\n              onMouseLeave={() => {\n                setDisplay('none');\n              }}\n              style={{ display: display }}\n              className={s.popup}\n            >\n              <div>\n                {newArray.map((_el, index) => (\n                  <p key={index}>{days[index]}</p>\n                ))}\n              </div>\n              <div>\n                {newArray.map((el, index) => (\n                  <p key={index}>\n                    {el.from} {el.to}\n                  </p>\n                ))}\n              </div>\n            </div>\n\n            <h6>Adress:</h6>\n            <a href={site} target=\"_blank\" id={s['adress']} rel=\"noreferrer\">\n              {adress}\n            </a>\n            <h6>Email:</h6>\n            <p>{email}</p>\n            <h6>Phone:</h6>\n            <p>{phone}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemFrien;\n","export const getFriends = state => state.friends.friends;\n","import React, { useEffect } from 'react';\nimport s from './index.module.css';\nimport ItemFrien from '../../components/ItemFriend';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { friendsOperations, friendsSelectors } from 'redux/friends';\n\nexport default function OurFriendsPage() {\n  const dispatch = useDispatch();\n  const friendsList = useSelector(friendsSelectors.getFriends);\n  useEffect(() => {\n    dispatch(friendsOperations.fetchFriends());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Our friends</h1>\n      {friendsList && (\n        <>\n          <div className={s.container}>\n            <div className={s.align_container}>\n              {friendsList[0] &&\n                friendsList.map(el => (\n                  <ItemFrien\n                    key={el._id}\n                    site={el.addressUrl}\n                    header={el.title}\n                    time={el.workDays ? el.workDays : []}\n                    adress={el.address ? el.address : '------------------'}\n                    email={el.email ? el.email : '------------------'}\n                    phone={el.phone ? el.phone : '------------------'}\n                    avatar={el.imageUrl ? el.imageUrl : '------------------'}\n                  />\n                ))}\n              ;\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["props","useState","display","setDisplay","header","time","adress","email","phone","avatar","site","days","newArray","filter","el","isOpen","map","index","day","className","s","alt","src","onClick","setTimeout","id","from","to","onMouseLeave","style","_el","href","target","rel","getFriends","state","friends","OurFriendsPage","dispatch","useDispatch","friendsList","useSelector","friendsSelectors","useEffect","friendsOperations","addressUrl","title","workDays","address","imageUrl","_id"],"sourceRoot":""}